local wk = require("which-key")

wk.register({
    c = { "<cmd> BufferClose<cr>", "Close Buffer" },
    e = { "<cmd> NvimTreeToggle<cr>", "Toggle NvimTree" },
    o = { "<cmd> NvimTreeFocus<cr>", "Focus NvimTree" },
    q = { "<cmd> q<cr>", "Quit Buffer" },
    w = { "<cmd> update!<cr>", "Write Buffer" },
    x = { "<cmd> qall<cr>", "Quit All Buffers" },
    m = {
        name = "Mason",
        i = { "<cmd> MasonInstall<cr>", "Install" },
        l = { "<cmd> MasonLog<cr>", "Log" },
        m = { "<cmd> Mason<cr>", "Mason" },
        u = { "<cmd> MasonUninstall<cr>", "Uninstall" },
    },
    g = {
        name = "Git",
        s = { "<cmd> Neogit kind=split<cr>", "Neogit" },
    },
    t = {
        name = "Terminal",
        ['\\'] = { "<cmd> ToggleTerm direction=float<cr>", "Floating" },
        b = { "<cmd> lua require('whleucka.core.terminal').bpytop_toggle()<cr>", "Open bpytop" },
        h = { "<cmd> ToggleTerm direction=horizontal size=15<cr>", "Horizontal" },
        m = { "<cmd> lua require('whleucka.core.terminal').matrix_toggle()<cr>", "Open cmatrix" },
        n = { "<cmd> lua require('whleucka.core.terminal').ncdu_toggle()<cr>", "Open ncdu" },
        t = { "<cmd> lua require('whleucka.core.terminal').htop_toggle()<cr>", "Open htop" },
        v = { "<cmd> ToggleTerm direction=vertical size=60<cr>", "Vertical" },
    },
    f = {
        name = "Find",
        b = { "<cmd>Telescope buffers<cr>", "Buffer" },
        f = { "<cmd>Telescope find_files<cr>", "File" },
        g = { "<cmd>Telescope git_files<cr>", "Git File" },
        o = { "<cmd>Telescope oldfiles<cr>", "Recent File" },
        w = { "<cmd>Telescope live_grep<cr>", "Live Grep" },
    },
    b = {
        name = "Buffers",
        [','] = { "<cmd>BufferMovePrevious<cr>", "Move Buffer Next" },
        ['.'] = { "<cmd>BufferMoveNext<cr>", "Move Buffer Prev" },
        ['0'] = { "<cmd>BufferLast<cr>", "Goto Last Buffer" },
        ['1'] = { "<cmd>BufferGoto 1<cr>", "Goto Buffer 1" },
        ['2'] = { "<cmd>BufferGoto 2<cr>", "Goto Buffer 2" },
        ['3'] = { "<cmd>BufferGoto 3<cr>", "Goto Buffer 3" },
        ['4'] = { "<cmd>BufferGoto 4<cr>", "Goto Buffer 4" },
        ['5'] = { "<cmd>BufferGoto 5<cr>", "Goto Buffer 5" },
        ['6'] = { "<cmd>BufferGoto 6<cr>", "Goto Buffer 6" },
        ['7'] = { "<cmd>BufferGoto 7<cr>", "Goto Buffer 7" },
        ['8'] = { "<cmd>BufferGoto 8<cr>", "Goto Buffer 8" },
        ['9'] = { "<cmd>BufferGoto 9<cr>", "Goto Buffer 9" },
    },
    z = {
        name = "Lazy",
        c = { "<cmd> Lazy clean<cr>", "Clean" },
        i = { "<cmd> Lazy install<cr>", "Install" },
        s = { "<cmd> Lazy sync<cr>", "Synchronize" },
        u = { "<cmd> Lazy update<cr>", "Update" },
        p = { "<cmd> Lazy profile<cr>", "Profile" },
        h = { "<cmd> Lazy help<cr>", "Help" },
        d = { "<cmd> Lazy debug<cr>", "Debug" },
        l = { "<cmd> Lazy log<cr>", "Log" },
        z = { "<cmd> Lazy health<cr>", "Health" },
        e = { "<cmd> Lazy clear<cr>", "Clear" },
    },
    d = {
        name = "Diagnostics",
        ['tc'] = { "<cmd> TroubleClose<cr>", "Trouble" },
        ['td'] = { "<cmd> TroubleToggle document_diagnostics<cr>", "Document" },
        t = { "<cmd> TroubleToggle<cr>", "Trouble" },
    },
    s = {
        name = "LSP",
        a = { function() vim.lsp.buf.code_action() end, "Code Action" },
        f = { function() vim.lsp.buf.format {async = true} end, "Format" },
        k = { function() vim.lsp.buf.signature_help() end, "Signature Help" },
        r = { function() vim.lsp.buf.rename() end, "Rename" },
    }
}, { prefix = "<leader>" })
